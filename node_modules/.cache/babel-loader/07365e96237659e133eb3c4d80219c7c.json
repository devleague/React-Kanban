{"ast":null,"code":"import _classCallCheck from \"/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/src/containers/NewCardForm/index.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { addCard as _addCard, editCard, deleteCard } from '../../actions/index'; // SMOKE TEST FOR AXIOS: open inspector and look at {}\n// axios.get('/api/kanban')\n// .then(result => {\n//   console.log(result.data)\n// })\n\nvar NewCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewCard, _Component);\n\n  function NewCard(props) {\n    var _this;\n\n    _classCallCheck(this, NewCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewCard).call(this, props));\n    _this.state = {\n      titleInput: '',\n      priorityInput: '',\n      createdByInput: '',\n      assignedToInput: ''\n    };\n    _this.handleTitle = _this.handleTitleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePriority = _this.handlePriorityChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCreatedBy = _this.handleCreatedByChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAssignedTo = _this.handleAssignedToChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewCard, [{\n    key: \"handleTitleChange\",\n    value: function handleTitleChange(event) {\n      this.setState({\n        titleInput: event.target.value\n      });\n    }\n  }, {\n    key: \"handlePriorityChange\",\n    value: function handlePriorityChange(event) {\n      this.setState({\n        priorityInput: event.target.value\n      });\n    }\n  }, {\n    key: \"handleCreatedByChange\",\n    value: function handleCreatedByChange(event) {\n      this.setState({\n        createdByInput: event.target.value\n      });\n    }\n  }, {\n    key: \"handleAssignedToChange\",\n    value: function handleAssignedToChange(event) {\n      this.setState({\n        assignedToInput: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault(); // const task = this.state.newTask.trim();\n\n      var oneTask = {\n        title: this.state.titleInput,\n        priority: this.state.priorityInput,\n        created_by: this.state.createdByInput,\n        assigned_to: this.state.assignedToInput\n      };\n      console.log(oneTask);\n\n      if (oneTask) {\n        this.props.addCard(oneTask);\n      }\n\n      this.setState({\n        oneTask: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        id: \"new-task-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"title-input\",\n        ref: function ref(input) {\n          _this2.textInput = input;\n        },\n        value: this.props.titleInput,\n        onChange: this.handleTitle,\n        placeholder: \"new task...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        className: \"priority-list\",\n        value: this.props.priorityInput,\n        onChange: this.handlePriority,\n        placeholder: \"select priority...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Select Priority... \"), React.createElement(\"option\", {\n        value: \"Low\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Low\"), React.createElement(\"option\", {\n        value: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(\"option\", {\n        value: \"High\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"High\")), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"created-by-input\",\n        ref: function ref(input) {\n          _this2.textInput = input;\n        },\n        value: this.props.createdByInput,\n        onChange: this.handleCreatedBy,\n        placeholder: \"created by...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"assigned-to-input\",\n        ref: function ref(input) {\n          _this2.textInput = input;\n        },\n        value: this.props.assignedToInput,\n        onChange: this.handleAssignedTo,\n        placeholder: \"assigned to...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Add Task\")));\n    }\n  }]);\n\n  return NewCard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    cards: state.cards\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addCard: function addCard(card) {\n      dispatch(_addCard(card));\n    }\n  };\n};\n\nvar ConnectedNewCard = connect(mapStateToProps, mapDispatchToProps)(NewCard);\nexport default ConnectedNewCard;","map":{"version":3,"sources":["/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/src/containers/NewCardForm/index.js"],"names":["React","Component","axios","addCard","editCard","deleteCard","NewCard","props","state","titleInput","priorityInput","createdByInput","assignedToInput","handleTitle","handleTitleChange","bind","handlePriority","handlePriorityChange","handleCreatedBy","handleCreatedByChange","handleAssignedTo","handleAssignedToChange","handleSubmit","event","setState","target","value","preventDefault","oneTask","title","priority","created_by","assigned_to","console","log","input","textInput","mapStateToProps","cards","mapDispatchToProps","dispatch","card","ConnectedNewCard","connect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { addCard, editCard, deleteCard } from '../../actions/index';\n\n\n// SMOKE TEST FOR AXIOS: open inspector and look at {}\n// axios.get('/api/kanban')\n// .then(result => {\n//   console.log(result.data)\n// })\n\nclass NewCard extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      titleInput: '',\n      priorityInput: '',\n      createdByInput: '',\n      assignedToInput: '',\n    }\n\n    this.handleTitle = this.handleTitleChange.bind(this);\n    this.handlePriority = this.handlePriorityChange.bind(this);\n    this.handleCreatedBy = this.handleCreatedByChange.bind(this);\n    this.handleAssignedTo = this.handleAssignedToChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleTitleChange(event) {\n    this.setState({ titleInput: event.target.value })\n  }\n\n  handlePriorityChange(event) {\n    this.setState({ priorityInput: event.target.value })\n  }\n\n  handleCreatedByChange(event) {\n    this.setState({ createdByInput: event.target.value })\n  }\n\n  handleAssignedToChange(event) {\n    this.setState({ assignedToInput: event.target.value })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // const task = this.state.newTask.trim();\n    const oneTask = {\n\n      title: this.state.titleInput,\n      priority: this.state.priorityInput,\n      created_by: this.state.createdByInput,\n      assigned_to: this.state.assignedToInput,\n    }\n    console.log(oneTask)\n    \n    if(oneTask) {\n      this.props.addCard(oneTask)\n    }\n    this.setState({ oneTask: '' });\n    }  \n  \n  \n  render() {\n    return (\n      <div id=\"new-task-form\">\n        <form onSubmit={this.handleSubmit}>\n          <input \n            type=\"text\" \n            id=\"title-input\"\n            ref={(input) => { this.textInput = input; }}\n            value={this.props.titleInput} \n            onChange={this.handleTitle} \n            placeholder=\"new task...\"\n          />\n        \n          <select\n            className=\"priority-list\"\n            value={this.props.priorityInput}\n            onChange={this.handlePriority}\n            placeholder=\"select priority...\">\n\n            <option value=\"Default\">Select Priority... </option>\n            <option value=\"Low\">Low</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"High\">High</option>\n          </select>\n\n          <input \n            type=\"text\" \n            id=\"created-by-input\"\n            ref={(input) => { this.textInput = input; }}\n            value={this.props.createdByInput} \n            onChange={this.handleCreatedBy} \n            placeholder=\"created by...\"\n          />\n\n          <input \n            type=\"text\" \n            id=\"assigned-to-input\"\n            ref={(input) => { this.textInput = input; }}\n            value={this.props.assignedToInput} \n            onChange={this.handleAssignedTo} \n            placeholder=\"assigned to...\"\n          />\n          <button type=\"submit\">Add Task</button>\n      </form>\n    </div>\n    \n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  console.log(state)\n  return {\n    cards: state.cards\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addCard: (card) => {\n      dispatch(addCard(card));\n    }\n  }\n}\n\nconst ConnectedNewCard = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewCard)\n\nexport default ConnectedNewCard;\n"]},"metadata":{},"sourceType":"module"}