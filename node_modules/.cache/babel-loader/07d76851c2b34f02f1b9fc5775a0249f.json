{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport Animation from './Animation';\nimport { noop } from '@progress/kendo-react-common';\nimport util from './util';\n\nvar Zoom =\n/** @class */\nfunction (_super) {\n  __extends(Zoom, _super);\n\n  function Zoom() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * @hidden\n     */\n\n\n    _this.state = {\n      style: null\n    };\n\n    _this.componentWillEnter = function (event) {\n      var onEnter = _this.props.onEnter;\n\n      _this.updateContainerDimensions(function () {\n        if (onEnter) {\n          onEnter.call(undefined, event);\n        }\n      });\n    };\n\n    _this.componentDidEnter = function (event) {\n      var onEntered = _this.props.onEntered;\n\n      _this.updateContainerDimensions(function () {\n        if (onEntered) {\n          onEntered.call(undefined, event);\n        }\n      });\n    };\n\n    _this.updateContainerDimensions = function (done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      var node = ReactDOM.findDOMNode(_this);\n\n      if (!node) {\n        return;\n      }\n\n      var content = node.firstChild;\n      var style;\n\n      if (_this.props.stackChildren && content) {\n        var newHeight = util.outerHeight(content);\n        var newWidth = util.outerWidth(content);\n        style = {\n          height: newHeight + 'px',\n          width: newWidth + 'px'\n        };\n      }\n\n      _this.setState({\n        style: style\n      }, done);\n    };\n\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.componentWillReceiveProps = function () {\n    this.updateContainerDimensions();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.componentDidMount = function () {\n    this.updateContainerDimensions();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        direction = _a.direction,\n        style = _a.style,\n        other = __rest(_a, [\"children\", \"direction\", \"style\"]);\n\n    return React.createElement(Animation, __assign({}, other, {\n      onEnter: this.componentWillEnter,\n      onEntered: this.componentDidEnter,\n      transitionName: \"zoom-\" + direction,\n      style: __assign({\n        style: style\n      }, this.state.style)\n    }), children);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    childFactory: PropTypes.any,\n    className: PropTypes.string,\n    direction: PropTypes.oneOf(['in', 'out']),\n    component: PropTypes.string,\n    id: PropTypes.string,\n    style: PropTypes.any,\n    stackChildren: PropTypes.bool\n  };\n  /**\n   * @hidden\n   */\n\n  Zoom.defaultProps = {\n    appear: false,\n    enter: true,\n    exit: true,\n    transitionEnterDuration: 300,\n    transitionExitDuration: 300,\n    direction: 'out',\n    stackChildren: false\n  };\n  return Zoom;\n}(React.Component);\n\nexport default Zoom;","map":null,"metadata":{},"sourceType":"module"}