{"ast":null,"code":"var itemsFromFakeDB = [{\n  id: 1,\n  description: 'Make Better Styles.',\n  priority: 'Medium',\n  by: 'Jon',\n  to: 'Renee'\n}, {\n  id: 2,\n  description: 'Make Better Styles. Make Better Styles. Make Better Styles. Make Better Styles. Make Better Styles. Make Better Styles.',\n  priority: 'Medium',\n  by: 'Jon',\n  to: 'Renee'\n}];\nvar newId = 3;\nexport var getItemsFromFakeXHR = function getItemsFromFakeXHR() {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve(itemsFromFakeDB.slice());\n    }, 500);\n  });\n};\nexport var addItemToFakeXHR = function addItemToFakeXHR(item) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      item.id = newId;\n      newId++;\n      itemsFromFakeDB.push(item);\n      console.log('itemFromFakeDB', itemsFromFakeDB);\n      resolve(itemsFromFakeDB);\n    }, 500);\n  });\n};\nexport var getItemByIdFromFakeXHR = function getItemByIdFromFakeXHR(itemId) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      var itemResponse = itemsFromFakeDB.find(function (item) {\n        return item.id === itemId;\n      });\n      if (itemResponse) resolve(itemResponse);else reject({\n        status: 404,\n        message: 'item not found'\n      });\n    }, 500);\n  });\n};\nexport var deleteItemByIdFromFakeXHR = function deleteItemByIdFromFakeXHR(itemId) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      var itemIdx = itemsFromFakeDB.findIndex(function (item) {\n        return item.id === itemId;\n      });\n\n      if (itemIdx === -1) {\n        reject({\n          status: 500,\n          message: 'item not found'\n        });\n      } else {\n        itemsFromFakeDB = itemsFromFakeDB.filter(function (item) {\n          return item.id !== itemId;\n        });\n        console.log('itemsFromFakeDB', itemsFromFakeDB);\n        console.log('itemIdx', itemIdx);\n        resolve({\n          status: 'ok'\n        });\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/romeocorpuz/Desktop/juneInit2018/react-kanban/src/db/db.js"],"names":["itemsFromFakeDB","id","description","priority","by","to","newId","getItemsFromFakeXHR","Promise","resolve","reject","setTimeout","slice","addItemToFakeXHR","item","push","console","log","getItemByIdFromFakeXHR","itemId","itemResponse","find","status","message","deleteItemByIdFromFakeXHR","itemIdx","findIndex","filter"],"mappings":"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","sourcesContent":["let itemsFromFakeDB = [{\n    id: 1,\n    description: 'Make Better Styles.',\n    priority: 'Medium',\n    by: 'Jon',\n    to: 'Renee'\n  },\n  {\n    id: 2,\n    description: 'Make Better Styles. Make Better Styles. Make Better Styles. Make Better Styles. Make Better Styles. Make Better Styles.',\n    priority: 'Medium',\n    by: 'Jon',\n    to: 'Renee'\n  }\n  ]\n  \n  let newId = 3\n  \n  export const getItemsFromFakeXHR = () => new Promise((resolve, reject) => {\n  setTimeout( () => {\n    resolve(itemsFromFakeDB.slice())\n  }, 500)\n  })\n  \n  export const addItemToFakeXHR = (item) => new Promise((resolve, reject) => {\n  setTimeout( () => {\n    item.id = newId;\n    newId++;\n    itemsFromFakeDB.push(item);\n    console.log('itemFromFakeDB', itemsFromFakeDB)\n    resolve(itemsFromFakeDB)\n  },500)\n  })\n  \n  export const getItemByIdFromFakeXHR = (itemId) => new Promise( (resolve, reject) => {\n  setTimeout( () => {\n    const itemResponse = itemsFromFakeDB.find( item => item.id === itemId);\n    if (itemResponse) resolve(itemResponse);\n    else reject({status: 404, message: 'item not found'})\n  }, 500)\n  })\n  \n  export const deleteItemByIdFromFakeXHR = (itemId) => new Promise ( (resolve, reject) => {\n  setTimeout( () => {\n    const itemIdx = itemsFromFakeDB.findIndex( item => item.id === itemId);\n    if (itemIdx === -1) {\n      reject({status: 500, message: 'item not found'})\n    } else {\n      itemsFromFakeDB = itemsFromFakeDB.filter( item => {\n        return item.id !== itemId\n      })\n      console.log('itemsFromFakeDB', itemsFromFakeDB)\n      console.log('itemIdx', itemIdx)\n      resolve({status: 'ok'})\n    }\n  })\n  })"]},"metadata":{},"sourceType":"module"}